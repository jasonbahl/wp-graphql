name: Generate Changeset

on:
  pull_request:
    types: [closed]

jobs:
  generate-changeset:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create changeset
        run: |
          # Extract PR info
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"

          # Determine change type from PR title
          if [[ $PR_TITLE =~ ^BREAKING ]]; then
            CHANGE_TYPE="major"
          elif [[ $PR_TITLE =~ ^feat: ]]; then
            CHANGE_TYPE="minor"
          else
            CHANGE_TYPE="patch"
          fi

          # Create changeset file
          npx changeset add --empty

          # Get the created changeset file
          CHANGESET_FILE=$(ls -t .changeset/*.md | head -n1)

          # Write changeset content
          echo "---" > "$CHANGESET_FILE"
          echo "type: $CHANGE_TYPE" >> "$CHANGESET_FILE"

          # Extract upgrade notes if they exist
          if [[ $PR_BODY =~ "Upgrade Notes"[[:space:]]*-{3,}[[:space:]]*([^#]*) ]]; then
            UPGRADE_NOTES="${BASH_REMATCH[1]}"
            echo -e "\n---\n\n$PR_TITLE\n\nUpgrade Notes:\n$UPGRADE_NOTES" >> "$CHANGESET_FILE"
          else
            echo -e "\n---\n\n$PR_TITLE" >> "$CHANGESET_FILE"
          fi

          # Commit and push if changes were made
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "GitHub Action"
            git config user.email "actions@github.com"
            git add .changeset/
            git commit -m "chore: add changeset for PR #${{ github.event.pull_request.number }}"
            git push
          fi