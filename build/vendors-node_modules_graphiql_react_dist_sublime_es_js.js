"use strict";
(globalThis["webpackChunkwpgraphql_ide"] = globalThis["webpackChunkwpgraphql_ide"] || []).push([["vendors-node_modules_graphiql_react_dist_sublime_es_js"],{

/***/ "./node_modules/@graphiql/react/dist/matchbrackets.es2.js":
/*!****************************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/matchbrackets.es2.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: () => (/* binding */ j)
/* harmony export */ });
/* harmony import */ var _codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es2.js */ "./node_modules/@graphiql/react/dist/codemirror.es2.js");
var R = Object.defineProperty;
var f = (L, y) => R(L, "name", { value: y, configurable: !0 });

var T = { exports: {} }, E;
function j() {
  return E || (E = 1, function(L, y) {
    (function(o) {
      o((0,_codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__.r)());
    })(function(o) {
      var S = /MSIE \d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8), g = o.Pos, p = { "(": ")>", ")": "(<", "[": "]>", "]": "[<", "{": "}>", "}": "{<", "<": ">>", ">": "<<" };
      function A(t) {
        return t && t.bracketRegex || /[(){}[\]]/;
      }
      f(A, "bracketRegex");
      function b(t, r, e) {
        var i = t.getLineHandle(r.line), n = r.ch - 1, l = e && e.afterCursor;
        l == null && (l = /(^| )cm-fat-cursor($| )/.test(t.getWrapperElement().className));
        var h = A(e), u = !l && n >= 0 && h.test(i.text.charAt(n)) && p[i.text.charAt(n)] || h.test(i.text.charAt(n + 1)) && p[i.text.charAt(++n)];
        if (!u)
          return null;
        var a = u.charAt(1) == ">" ? 1 : -1;
        if (e && e.strict && a > 0 != (n == r.ch))
          return null;
        var k = t.getTokenTypeAt(g(r.line, n + 1)), s = H(t, g(r.line, n + (a > 0 ? 1 : 0)), a, k, e);
        return s == null ? null : {
          from: g(r.line, n),
          to: s && s.pos,
          match: s && s.ch == u.charAt(0),
          forward: a > 0
        };
      }
      f(b, "findMatchingBracket");
      function H(t, r, e, i, n) {
        for (var l = n && n.maxScanLineLength || 1e4, h = n && n.maxScanLines || 1e3, u = [], a = A(n), k = e > 0 ? Math.min(r.line + h, t.lastLine() + 1) : Math.max(t.firstLine() - 1, r.line - h), s = r.line; s != k; s += e) {
          var c = t.getLine(s);
          if (c) {
            var v = e > 0 ? 0 : c.length - 1, q = e > 0 ? c.length : -1;
            if (!(c.length > l))
              for (s == r.line && (v = r.ch - (e < 0 ? 1 : 0)); v != q; v += e) {
                var d = c.charAt(v);
                if (a.test(d) && (i === void 0 || (t.getTokenTypeAt(g(s, v + 1)) || "") == (i || ""))) {
                  var m = p[d];
                  if (m && m.charAt(1) == ">" == e > 0)
                    u.push(d);
                  else if (u.length)
                    u.pop();
                  else
                    return { pos: g(s, v), ch: d };
                }
              }
          }
        }
        return s - e == (e > 0 ? t.lastLine() : t.firstLine()) ? !1 : null;
      }
      f(H, "scanForBracket");
      function M(t, r, e) {
        for (var i = t.state.matchBrackets.maxHighlightLineLength || 1e3, n = e && e.highlightNonMatching, l = [], h = t.listSelections(), u = 0; u < h.length; u++) {
          var a = h[u].empty() && b(t, h[u].head, e);
          if (a && (a.match || n !== !1) && t.getLine(a.from.line).length <= i) {
            var k = a.match ? "CodeMirror-matchingbracket" : "CodeMirror-nonmatchingbracket";
            l.push(t.markText(a.from, g(a.from.line, a.from.ch + 1), { className: k })), a.to && t.getLine(a.to.line).length <= i && l.push(t.markText(a.to, g(a.to.line, a.to.ch + 1), { className: k }));
          }
        }
        if (l.length) {
          S && t.state.focused && t.focus();
          var s = /* @__PURE__ */ f(function() {
            t.operation(function() {
              for (var c = 0; c < l.length; c++)
                l[c].clear();
            });
          }, "clear");
          if (r)
            setTimeout(s, 800);
          else
            return s;
        }
      }
      f(M, "matchBrackets");
      function x(t) {
        t.operation(function() {
          t.state.matchBrackets.currentlyHighlighted && (t.state.matchBrackets.currentlyHighlighted(), t.state.matchBrackets.currentlyHighlighted = null), t.state.matchBrackets.currentlyHighlighted = M(t, !1, t.state.matchBrackets);
        });
      }
      f(x, "doMatchBrackets");
      function B(t) {
        t.state.matchBrackets && t.state.matchBrackets.currentlyHighlighted && (t.state.matchBrackets.currentlyHighlighted(), t.state.matchBrackets.currentlyHighlighted = null);
      }
      f(B, "clearHighlighted"), o.defineOption("matchBrackets", !1, function(t, r, e) {
        e && e != o.Init && (t.off("cursorActivity", x), t.off("focus", x), t.off("blur", B), B(t)), r && (t.state.matchBrackets = typeof r == "object" ? r : {}, t.on("cursorActivity", x), t.on("focus", x), t.on("blur", B));
      }), o.defineExtension("matchBrackets", function() {
        M(this, !0);
      }), o.defineExtension("findMatchingBracket", function(t, r, e) {
        return (e || typeof r == "boolean") && (e ? (e.strict = r, r = e) : r = r ? { strict: !0 } : null), b(this, t, r);
      }), o.defineExtension("scanForBracket", function(t, r, e, i) {
        return H(this, t, r, e, i);
      });
    });
  }()), T.exports;
}
f(j, "requireMatchbrackets");

//# sourceMappingURL=matchbrackets.es2.js.map


/***/ }),

/***/ "./node_modules/@graphiql/react/dist/searchcursor.es2.js":
/*!***************************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/searchcursor.es2.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: () => (/* binding */ K)
/* harmony export */ });
/* harmony import */ var _codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es2.js */ "./node_modules/@graphiql/react/dist/codemirror.es2.js");
var W = Object.defineProperty;
var o = (d, E) => W(d, "name", { value: E, configurable: !0 });

var N = { exports: {} }, b;
function K() {
  return b || (b = 1, function(d, E) {
    (function(m) {
      m((0,_codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__.r)());
    })(function(m) {
      var s = m.Pos;
      function B(e) {
        var t = e.flags;
        return t ?? (e.ignoreCase ? "i" : "") + (e.global ? "g" : "") + (e.multiline ? "m" : "");
      }
      o(B, "regexpFlags");
      function F(e, t) {
        for (var n = B(e), r = n, l = 0; l < t.length; l++)
          r.indexOf(t.charAt(l)) == -1 && (r += t.charAt(l));
        return n == r ? e : new RegExp(e.source, r);
      }
      o(F, "ensureFlags");
      function R(e) {
        return /\\s|\\n|\n|\\W|\\D|\[\^/.test(e.source);
      }
      o(R, "maybeMultiline");
      function I(e, t, n) {
        t = F(t, "g");
        for (var r = n.line, l = n.ch, i = e.lastLine(); r <= i; r++, l = 0) {
          t.lastIndex = l;
          var h = e.getLine(r), f = t.exec(h);
          if (f)
            return {
              from: s(r, f.index),
              to: s(r, f.index + f[0].length),
              match: f
            };
        }
      }
      o(I, "searchRegexpForward");
      function j(e, t, n) {
        if (!R(t))
          return I(e, t, n);
        t = F(t, "gm");
        for (var r, l = 1, i = n.line, h = e.lastLine(); i <= h; ) {
          for (var f = 0; f < l && !(i > h); f++) {
            var p = e.getLine(i++);
            r = r == null ? p : r + `
` + p;
          }
          l = l * 2, t.lastIndex = n.ch;
          var u = t.exec(r);
          if (u) {
            var a = r.slice(0, u.index).split(`
`), c = u[0].split(`
`), g = n.line + a.length - 1, v = a[a.length - 1].length;
            return {
              from: s(g, v),
              to: s(
                g + c.length - 1,
                c.length == 1 ? v + c[0].length : c[c.length - 1].length
              ),
              match: u
            };
          }
        }
      }
      o(j, "searchRegexpForwardMultiline");
      function z(e, t, n) {
        for (var r, l = 0; l <= e.length; ) {
          t.lastIndex = l;
          var i = t.exec(e);
          if (!i)
            break;
          var h = i.index + i[0].length;
          if (h > e.length - n)
            break;
          (!r || h > r.index + r[0].length) && (r = i), l = i.index + 1;
        }
        return r;
      }
      o(z, "lastMatchIn");
      function D(e, t, n) {
        t = F(t, "g");
        for (var r = n.line, l = n.ch, i = e.firstLine(); r >= i; r--, l = -1) {
          var h = e.getLine(r), f = z(h, t, l < 0 ? 0 : h.length - l);
          if (f)
            return {
              from: s(r, f.index),
              to: s(r, f.index + f[0].length),
              match: f
            };
        }
      }
      o(D, "searchRegexpBackward");
      function A(e, t, n) {
        if (!R(t))
          return D(e, t, n);
        t = F(t, "gm");
        for (var r, l = 1, i = e.getLine(n.line).length - n.ch, h = n.line, f = e.firstLine(); h >= f; ) {
          for (var p = 0; p < l && h >= f; p++) {
            var u = e.getLine(h--);
            r = r == null ? u : u + `
` + r;
          }
          l *= 2;
          var a = z(r, t, i);
          if (a) {
            var c = r.slice(0, a.index).split(`
`), g = a[0].split(`
`), v = h + c.length, x = c[c.length - 1].length;
            return {
              from: s(v, x),
              to: s(
                v + g.length - 1,
                g.length == 1 ? x + g[0].length : g[g.length - 1].length
              ),
              match: a
            };
          }
        }
      }
      o(A, "searchRegexpBackwardMultiline");
      var P, k;
      String.prototype.normalize ? (P = /* @__PURE__ */ o(function(e) {
        return e.normalize("NFD").toLowerCase();
      }, "doFold"), k = /* @__PURE__ */ o(function(e) {
        return e.normalize("NFD");
      }, "noFold")) : (P = /* @__PURE__ */ o(function(e) {
        return e.toLowerCase();
      }, "doFold"), k = /* @__PURE__ */ o(function(e) {
        return e;
      }, "noFold"));
      function L(e, t, n, r) {
        if (e.length == t.length)
          return n;
        for (var l = 0, i = n + Math.max(0, e.length - t.length); ; ) {
          if (l == i)
            return l;
          var h = l + i >> 1, f = r(e.slice(0, h)).length;
          if (f == n)
            return h;
          f > n ? i = h : l = h + 1;
        }
      }
      o(L, "adjustPos");
      function y(e, t, n, r) {
        if (!t.length)
          return null;
        var l = r ? P : k, i = l(t).split(/\r|\n\r?/);
        t:
          for (var h = n.line, f = n.ch, p = e.lastLine() + 1 - i.length; h <= p; h++, f = 0) {
            var u = e.getLine(h).slice(f), a = l(u);
            if (i.length == 1) {
              var c = a.indexOf(i[0]);
              if (c == -1)
                continue t;
              var n = L(u, a, c, l) + f;
              return {
                from: s(h, L(u, a, c, l) + f),
                to: s(h, L(u, a, c + i[0].length, l) + f)
              };
            } else {
              var g = a.length - i[0].length;
              if (a.slice(g) != i[0])
                continue t;
              for (var v = 1; v < i.length - 1; v++)
                if (l(e.getLine(h + v)) != i[v])
                  continue t;
              var x = e.getLine(h + i.length - 1), O = l(x), S = i[i.length - 1];
              if (O.slice(0, S.length) != S)
                continue t;
              return {
                from: s(h, L(u, a, g, l) + f),
                to: s(h + i.length - 1, L(x, O, S.length, l))
              };
            }
          }
      }
      o(y, "searchStringForward");
      function C(e, t, n, r) {
        if (!t.length)
          return null;
        var l = r ? P : k, i = l(t).split(/\r|\n\r?/);
        t:
          for (var h = n.line, f = n.ch, p = e.firstLine() - 1 + i.length; h >= p; h--, f = -1) {
            var u = e.getLine(h);
            f > -1 && (u = u.slice(0, f));
            var a = l(u);
            if (i.length == 1) {
              var c = a.lastIndexOf(i[0]);
              if (c == -1)
                continue t;
              return {
                from: s(h, L(u, a, c, l)),
                to: s(h, L(u, a, c + i[0].length, l))
              };
            } else {
              var g = i[i.length - 1];
              if (a.slice(0, g.length) != g)
                continue t;
              for (var v = 1, n = h - i.length + 1; v < i.length - 1; v++)
                if (l(e.getLine(n + v)) != i[v])
                  continue t;
              var x = e.getLine(h + 1 - i.length), O = l(x);
              if (O.slice(O.length - i[0].length) != i[0])
                continue t;
              return {
                from: s(h + 1 - i.length, L(x, O, x.length - i[0].length, l)),
                to: s(h, L(u, a, g.length, l))
              };
            }
          }
      }
      o(C, "searchStringBackward");
      function w(e, t, n, r) {
        this.atOccurrence = !1, this.afterEmptyMatch = !1, this.doc = e, n = n ? e.clipPos(n) : s(0, 0), this.pos = { from: n, to: n };
        var l;
        typeof r == "object" ? l = r.caseFold : (l = r, r = null), typeof t == "string" ? (l == null && (l = !1), this.matches = function(i, h) {
          return (i ? C : y)(e, t, h, l);
        }) : (t = F(t, "gm"), !r || r.multiline !== !1 ? this.matches = function(i, h) {
          return (i ? A : j)(e, t, h);
        } : this.matches = function(i, h) {
          return (i ? D : I)(e, t, h);
        });
      }
      o(w, "SearchCursor"), w.prototype = {
        findNext: function() {
          return this.find(!1);
        },
        findPrevious: function() {
          return this.find(!0);
        },
        find: function(e) {
          var t = this.doc.clipPos(e ? this.pos.from : this.pos.to);
          if (this.afterEmptyMatch && this.atOccurrence && (t = s(t.line, t.ch), e ? (t.ch--, t.ch < 0 && (t.line--, t.ch = (this.doc.getLine(t.line) || "").length)) : (t.ch++, t.ch > (this.doc.getLine(t.line) || "").length && (t.ch = 0, t.line++)), m.cmpPos(t, this.doc.clipPos(t)) != 0))
            return this.atOccurrence = !1;
          var n = this.matches(e, t);
          if (this.afterEmptyMatch = n && m.cmpPos(n.from, n.to) == 0, n)
            return this.pos = n, this.atOccurrence = !0, this.pos.match || !0;
          var r = s(e ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);
          return this.pos = { from: r, to: r }, this.atOccurrence = !1;
        },
        from: function() {
          if (this.atOccurrence)
            return this.pos.from;
        },
        to: function() {
          if (this.atOccurrence)
            return this.pos.to;
        },
        replace: function(e, t) {
          if (this.atOccurrence) {
            var n = m.splitLines(e);
            this.doc.replaceRange(n, this.pos.from, this.pos.to, t), this.pos.to = s(
              this.pos.from.line + n.length - 1,
              n[n.length - 1].length + (n.length == 1 ? this.pos.from.ch : 0)
            );
          }
        }
      }, m.defineExtension("getSearchCursor", function(e, t, n) {
        return new w(this.doc, e, t, n);
      }), m.defineDocExtension("getSearchCursor", function(e, t, n) {
        return new w(this, e, t, n);
      }), m.defineExtension("selectMatches", function(e, t) {
        for (var n = [], r = this.getSearchCursor(e, this.getCursor("from"), t); r.findNext() && !(m.cmpPos(r.to(), this.getCursor("to")) > 0); )
          n.push({ anchor: r.from(), head: r.to() });
        n.length && this.setSelections(n, 0);
      });
    });
  }()), N.exports;
}
o(K, "requireSearchcursor");

//# sourceMappingURL=searchcursor.es2.js.map


/***/ }),

/***/ "./node_modules/@graphiql/react/dist/sublime.es.js":
/*!*********************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/sublime.es.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   s: () => (/* binding */ te)
/* harmony export */ });
/* harmony import */ var _codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es2.js */ "./node_modules/@graphiql/react/dist/codemirror.es2.js");
/* harmony import */ var _searchcursor_es2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./searchcursor.es2.js */ "./node_modules/@graphiql/react/dist/searchcursor.es2.js");
/* harmony import */ var _matchbrackets_es2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./matchbrackets.es2.js */ "./node_modules/@graphiql/react/dist/matchbrackets.es2.js");
var V = Object.defineProperty;
var v = (m, B) => V(m, "name", { value: B, configurable: !0 });



function G(m, B) {
  for (var h = 0; h < B.length; h++) {
    const a = B[h];
    if (typeof a != "string" && !Array.isArray(a)) {
      for (const f in a)
        if (f !== "default" && !(f in m)) {
          const A = Object.getOwnPropertyDescriptor(a, f);
          A && Object.defineProperty(m, f, A.get ? A : {
            enumerable: !0,
            get: () => a[f]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(m, Symbol.toStringTag, { value: "Module" }));
}
v(G, "_mergeNamespaces");
var Q = { exports: {} };
(function(m, B) {
  (function(h) {
    h((0,_codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__.r)(), (0,_searchcursor_es2_js__WEBPACK_IMPORTED_MODULE_1__.r)(), (0,_matchbrackets_es2_js__WEBPACK_IMPORTED_MODULE_2__.r)());
  })(function(h) {
    var a = h.commands, f = h.Pos;
    function A(e, t, n) {
      if (n < 0 && t.ch == 0)
        return e.clipPos(f(t.line - 1));
      var r = e.getLine(t.line);
      if (n > 0 && t.ch >= r.length)
        return e.clipPos(f(t.line + 1, 0));
      for (var l = "start", i, o = t.ch, s = o, u = n < 0 ? 0 : r.length, d = 0; s != u; s += n, d++) {
        var p = r.charAt(n < 0 ? s - 1 : s), c = p != "_" && h.isWordChar(p) ? "w" : "o";
        if (c == "w" && p.toUpperCase() == p && (c = "W"), l == "start")
          c != "o" ? (l = "in", i = c) : o = s + n;
        else if (l == "in" && i != c) {
          if (i == "w" && c == "W" && n < 0 && s--, i == "W" && c == "w" && n > 0)
            if (s == o + 1) {
              i = "w";
              continue;
            } else
              s--;
          break;
        }
      }
      return f(t.line, s);
    }
    v(A, "findPosSubword");
    function F(e, t) {
      e.extendSelectionsBy(function(n) {
        return e.display.shift || e.doc.extend || n.empty() ? A(e.doc, n.head, t) : t < 0 ? n.from() : n.to();
      });
    }
    v(F, "moveSubword"), a.goSubwordLeft = function(e) {
      F(e, -1);
    }, a.goSubwordRight = function(e) {
      F(e, 1);
    }, a.scrollLineUp = function(e) {
      var t = e.getScrollInfo();
      if (!e.somethingSelected()) {
        var n = e.lineAtHeight(t.top + t.clientHeight, "local");
        e.getCursor().line >= n && e.execCommand("goLineUp");
      }
      e.scrollTo(null, t.top - e.defaultTextHeight());
    }, a.scrollLineDown = function(e) {
      var t = e.getScrollInfo();
      if (!e.somethingSelected()) {
        var n = e.lineAtHeight(t.top, "local") + 1;
        e.getCursor().line <= n && e.execCommand("goLineDown");
      }
      e.scrollTo(null, t.top + e.defaultTextHeight());
    }, a.splitSelectionByLine = function(e) {
      for (var t = e.listSelections(), n = [], r = 0; r < t.length; r++)
        for (var l = t[r].from(), i = t[r].to(), o = l.line; o <= i.line; ++o)
          i.line > l.line && o == i.line && i.ch == 0 || n.push({
            anchor: o == l.line ? l : f(o, 0),
            head: o == i.line ? i : f(o)
          });
      e.setSelections(n, 0);
    }, a.singleSelectionTop = function(e) {
      var t = e.listSelections()[0];
      e.setSelection(t.anchor, t.head, { scroll: !1 });
    }, a.selectLine = function(e) {
      for (var t = e.listSelections(), n = [], r = 0; r < t.length; r++) {
        var l = t[r];
        n.push({
          anchor: f(l.from().line, 0),
          head: f(l.to().line + 1, 0)
        });
      }
      e.setSelections(n);
    };
    function T(e, t) {
      if (e.isReadOnly())
        return h.Pass;
      e.operation(function() {
        for (var n = e.listSelections().length, r = [], l = -1, i = 0; i < n; i++) {
          var o = e.listSelections()[i].head;
          if (!(o.line <= l)) {
            var s = f(o.line + (t ? 0 : 1), 0);
            e.replaceRange(`
`, s, null, "+insertLine"), e.indentLine(s.line, null, !0), r.push({ head: s, anchor: s }), l = o.line + 1;
          }
        }
        e.setSelections(r);
      }), e.execCommand("indentAuto");
    }
    v(T, "insertLine"), a.insertLineAfter = function(e) {
      return T(e, !1);
    }, a.insertLineBefore = function(e) {
      return T(e, !0);
    };
    function K(e, t) {
      for (var n = t.ch, r = n, l = e.getLine(t.line); n && h.isWordChar(l.charAt(n - 1)); )
        --n;
      for (; r < l.length && h.isWordChar(l.charAt(r)); )
        ++r;
      return { from: f(t.line, n), to: f(t.line, r), word: l.slice(n, r) };
    }
    v(K, "wordAt"), a.selectNextOccurrence = function(e) {
      var t = e.getCursor("from"), n = e.getCursor("to"), r = e.state.sublimeFindFullWord == e.doc.sel;
      if (h.cmpPos(t, n) == 0) {
        var l = K(e, t);
        if (!l.word)
          return;
        e.setSelection(l.from, l.to), r = !0;
      } else {
        var i = e.getRange(t, n), o = r ? new RegExp("\\b" + i + "\\b") : i, s = e.getSearchCursor(o, n), u = s.findNext();
        if (u || (s = e.getSearchCursor(o, f(e.firstLine(), 0)), u = s.findNext()), !u || H(e.listSelections(), s.from(), s.to()))
          return;
        e.addSelection(s.from(), s.to());
      }
      r && (e.state.sublimeFindFullWord = e.doc.sel);
    }, a.skipAndSelectNextOccurrence = function(e) {
      var t = e.getCursor("anchor"), n = e.getCursor("head");
      a.selectNextOccurrence(e), h.cmpPos(t, n) != 0 && e.doc.setSelections(e.doc.listSelections().filter(function(r) {
        return r.anchor != t || r.head != n;
      }));
    };
    function y(e, t) {
      for (var n = e.listSelections(), r = [], l = 0; l < n.length; l++) {
        var i = n[l], o = e.findPosV(
          i.anchor,
          t,
          "line",
          i.anchor.goalColumn
        ), s = e.findPosV(
          i.head,
          t,
          "line",
          i.head.goalColumn
        );
        o.goalColumn = i.anchor.goalColumn != null ? i.anchor.goalColumn : e.cursorCoords(i.anchor, "div").left, s.goalColumn = i.head.goalColumn != null ? i.head.goalColumn : e.cursorCoords(i.head, "div").left;
        var u = { anchor: o, head: s };
        r.push(i), r.push(u);
      }
      e.setSelections(r);
    }
    v(y, "addCursorToSelection"), a.addCursorToPrevLine = function(e) {
      y(e, -1);
    }, a.addCursorToNextLine = function(e) {
      y(e, 1);
    };
    function H(e, t, n) {
      for (var r = 0; r < e.length; r++)
        if (h.cmpPos(e[r].from(), t) == 0 && h.cmpPos(e[r].to(), n) == 0)
          return !0;
      return !1;
    }
    v(H, "isSelectedRange");
    var P = "(){}[]";
    function U(e) {
      for (var t = e.listSelections(), n = [], r = 0; r < t.length; r++) {
        var l = t[r], i = l.head, o = e.scanForBracket(i, -1);
        if (!o)
          return !1;
        for (; ; ) {
          var s = e.scanForBracket(i, 1);
          if (!s)
            return !1;
          if (s.ch == P.charAt(P.indexOf(o.ch) + 1)) {
            var u = f(o.pos.line, o.pos.ch + 1);
            if (h.cmpPos(u, l.from()) == 0 && h.cmpPos(s.pos, l.to()) == 0) {
              if (o = e.scanForBracket(o.pos, -1), !o)
                return !1;
            } else {
              n.push({ anchor: u, head: s.pos });
              break;
            }
          }
          i = f(s.pos.line, s.pos.ch + 1);
        }
      }
      return e.setSelections(n), !0;
    }
    v(U, "selectBetweenBrackets"), a.selectScope = function(e) {
      U(e) || e.execCommand("selectAll");
    }, a.selectBetweenBrackets = function(e) {
      if (!U(e))
        return h.Pass;
    };
    function I(e) {
      return e ? /\bpunctuation\b/.test(e) ? e : void 0 : null;
    }
    v(I, "puncType"), a.goToBracket = function(e) {
      e.extendSelectionsBy(function(t) {
        var n = e.scanForBracket(t.head, 1, I(e.getTokenTypeAt(t.head)));
        if (n && h.cmpPos(n.pos, t.head) != 0)
          return n.pos;
        var r = e.scanForBracket(t.head, -1, I(e.getTokenTypeAt(f(t.head.line, t.head.ch + 1))));
        return r && f(r.pos.line, r.pos.ch + 1) || t.head;
      });
    }, a.swapLineUp = function(e) {
      if (e.isReadOnly())
        return h.Pass;
      for (var t = e.listSelections(), n = [], r = e.firstLine() - 1, l = [], i = 0; i < t.length; i++) {
        var o = t[i], s = o.from().line - 1, u = o.to().line;
        l.push({
          anchor: f(o.anchor.line - 1, o.anchor.ch),
          head: f(o.head.line - 1, o.head.ch)
        }), o.to().ch == 0 && !o.empty() && --u, s > r ? n.push(s, u) : n.length && (n[n.length - 1] = u), r = u;
      }
      e.operation(function() {
        for (var d = 0; d < n.length; d += 2) {
          var p = n[d], c = n[d + 1], b = e.getLine(p);
          e.replaceRange("", f(p, 0), f(p + 1, 0), "+swapLine"), c > e.lastLine() ? e.replaceRange(`
` + b, f(e.lastLine()), null, "+swapLine") : e.replaceRange(b + `
`, f(c, 0), null, "+swapLine");
        }
        e.setSelections(l), e.scrollIntoView();
      });
    }, a.swapLineDown = function(e) {
      if (e.isReadOnly())
        return h.Pass;
      for (var t = e.listSelections(), n = [], r = e.lastLine() + 1, l = t.length - 1; l >= 0; l--) {
        var i = t[l], o = i.to().line + 1, s = i.from().line;
        i.to().ch == 0 && !i.empty() && o--, o < r ? n.push(o, s) : n.length && (n[n.length - 1] = s), r = s;
      }
      e.operation(function() {
        for (var u = n.length - 2; u >= 0; u -= 2) {
          var d = n[u], p = n[u + 1], c = e.getLine(d);
          d == e.lastLine() ? e.replaceRange("", f(d - 1), f(d), "+swapLine") : e.replaceRange("", f(d, 0), f(d + 1, 0), "+swapLine"), e.replaceRange(c + `
`, f(p, 0), null, "+swapLine");
        }
        e.scrollIntoView();
      });
    }, a.toggleCommentIndented = function(e) {
      e.toggleComment({ indent: !0 });
    }, a.joinLines = function(e) {
      for (var t = e.listSelections(), n = [], r = 0; r < t.length; r++) {
        for (var l = t[r], i = l.from(), o = i.line, s = l.to().line; r < t.length - 1 && t[r + 1].from().line == s; )
          s = t[++r].to().line;
        n.push({ start: o, end: s, anchor: !l.empty() && i });
      }
      e.operation(function() {
        for (var u = 0, d = [], p = 0; p < n.length; p++) {
          for (var c = n[p], b = c.anchor && f(c.anchor.line - u, c.anchor.ch), w, g = c.start; g <= c.end; g++) {
            var S = g - u;
            g == c.end && (w = f(S, e.getLine(S).length + 1)), S < e.lastLine() && (e.replaceRange(" ", f(S), f(S + 1, /^\s*/.exec(e.getLine(S + 1))[0].length)), ++u);
          }
          d.push({ anchor: b || w, head: w });
        }
        e.setSelections(d, 0);
      });
    }, a.duplicateLine = function(e) {
      e.operation(function() {
        for (var t = e.listSelections().length, n = 0; n < t; n++) {
          var r = e.listSelections()[n];
          r.empty() ? e.replaceRange(e.getLine(r.head.line) + `
`, f(r.head.line, 0)) : e.replaceRange(e.getRange(r.from(), r.to()), r.from());
        }
        e.scrollIntoView();
      });
    };
    function R(e, t, n) {
      if (e.isReadOnly())
        return h.Pass;
      for (var r = e.listSelections(), l = [], i, o = 0; o < r.length; o++) {
        var s = r[o];
        if (!s.empty()) {
          for (var u = s.from().line, d = s.to().line; o < r.length - 1 && r[o + 1].from().line == d; )
            d = r[++o].to().line;
          r[o].to().ch || d--, l.push(u, d);
        }
      }
      l.length ? i = !0 : l.push(e.firstLine(), e.lastLine()), e.operation(function() {
        for (var p = [], c = 0; c < l.length; c += 2) {
          var b = l[c], w = l[c + 1], g = f(b, 0), S = f(w), x = e.getRange(g, S, !1);
          t ? x.sort(function(k, L) {
            return k < L ? -n : k == L ? 0 : n;
          }) : x.sort(function(k, L) {
            var W = k.toUpperCase(), M = L.toUpperCase();
            return W != M && (k = W, L = M), k < L ? -n : k == L ? 0 : n;
          }), e.replaceRange(x, g, S), i && p.push({ anchor: g, head: f(w + 1, 0) });
        }
        i && e.setSelections(p, 0);
      });
    }
    v(R, "sortLines"), a.sortLines = function(e) {
      R(e, !0, 1);
    }, a.reverseSortLines = function(e) {
      R(e, !0, -1);
    }, a.sortLinesInsensitive = function(e) {
      R(e, !1, 1);
    }, a.reverseSortLinesInsensitive = function(e) {
      R(e, !1, -1);
    }, a.nextBookmark = function(e) {
      var t = e.state.sublimeBookmarks;
      if (t)
        for (; t.length; ) {
          var n = t.shift(), r = n.find();
          if (r)
            return t.push(n), e.setSelection(r.from, r.to);
        }
    }, a.prevBookmark = function(e) {
      var t = e.state.sublimeBookmarks;
      if (t)
        for (; t.length; ) {
          t.unshift(t.pop());
          var n = t[t.length - 1].find();
          if (!n)
            t.pop();
          else
            return e.setSelection(n.from, n.to);
        }
    }, a.toggleBookmark = function(e) {
      for (var t = e.listSelections(), n = e.state.sublimeBookmarks || (e.state.sublimeBookmarks = []), r = 0; r < t.length; r++) {
        for (var l = t[r].from(), i = t[r].to(), o = t[r].empty() ? e.findMarksAt(l) : e.findMarks(l, i), s = 0; s < o.length; s++)
          if (o[s].sublimeBookmark) {
            o[s].clear();
            for (var u = 0; u < n.length; u++)
              n[u] == o[s] && n.splice(u--, 1);
            break;
          }
        s == o.length && n.push(e.markText(l, i, { sublimeBookmark: !0, clearWhenEmpty: !1 }));
      }
    }, a.clearBookmarks = function(e) {
      var t = e.state.sublimeBookmarks;
      if (t)
        for (var n = 0; n < t.length; n++)
          t[n].clear();
      t.length = 0;
    }, a.selectBookmarks = function(e) {
      var t = e.state.sublimeBookmarks, n = [];
      if (t)
        for (var r = 0; r < t.length; r++) {
          var l = t[r].find();
          l ? n.push({ anchor: l.from, head: l.to }) : t.splice(r--, 0);
        }
      n.length && e.setSelections(n, 0);
    };
    function D(e, t) {
      e.operation(function() {
        for (var n = e.listSelections(), r = [], l = [], i = 0; i < n.length; i++) {
          var o = n[i];
          o.empty() ? (r.push(i), l.push("")) : l.push(t(e.getRange(o.from(), o.to())));
        }
        e.replaceSelections(l, "around", "case");
        for (var i = r.length - 1, s; i >= 0; i--) {
          var o = n[r[i]];
          if (!(s && h.cmpPos(o.head, s) > 0)) {
            var u = K(e, o.head);
            s = u.from, e.replaceRange(t(u.word), u.from, u.to);
          }
        }
      });
    }
    v(D, "modifyWordOrSelection"), a.smartBackspace = function(e) {
      if (e.somethingSelected())
        return h.Pass;
      e.operation(function() {
        for (var t = e.listSelections(), n = e.getOption("indentUnit"), r = t.length - 1; r >= 0; r--) {
          var l = t[r].head, i = e.getRange({ line: l.line, ch: 0 }, l), o = h.countColumn(i, null, e.getOption("tabSize")), s = e.findPosH(l, -1, "char", !1);
          if (i && !/\S/.test(i) && o % n == 0) {
            var u = new f(
              l.line,
              h.findColumn(i, o - n, n)
            );
            u.ch != l.ch && (s = u);
          }
          e.replaceRange("", s, l, "+delete");
        }
      });
    }, a.delLineRight = function(e) {
      e.operation(function() {
        for (var t = e.listSelections(), n = t.length - 1; n >= 0; n--)
          e.replaceRange("", t[n].anchor, f(t[n].to().line), "+delete");
        e.scrollIntoView();
      });
    }, a.upcaseAtCursor = function(e) {
      D(e, function(t) {
        return t.toUpperCase();
      });
    }, a.downcaseAtCursor = function(e) {
      D(e, function(t) {
        return t.toLowerCase();
      });
    }, a.setSublimeMark = function(e) {
      e.state.sublimeMark && e.state.sublimeMark.clear(), e.state.sublimeMark = e.setBookmark(e.getCursor());
    }, a.selectToSublimeMark = function(e) {
      var t = e.state.sublimeMark && e.state.sublimeMark.find();
      t && e.setSelection(e.getCursor(), t);
    }, a.deleteToSublimeMark = function(e) {
      var t = e.state.sublimeMark && e.state.sublimeMark.find();
      if (t) {
        var n = e.getCursor(), r = t;
        if (h.cmpPos(n, r) > 0) {
          var l = r;
          r = n, n = l;
        }
        e.state.sublimeKilled = e.getRange(n, r), e.replaceRange("", n, r);
      }
    }, a.swapWithSublimeMark = function(e) {
      var t = e.state.sublimeMark && e.state.sublimeMark.find();
      t && (e.state.sublimeMark.clear(), e.state.sublimeMark = e.setBookmark(e.getCursor()), e.setCursor(t));
    }, a.sublimeYank = function(e) {
      e.state.sublimeKilled != null && e.replaceSelection(e.state.sublimeKilled, null, "paste");
    }, a.showInCenter = function(e) {
      var t = e.cursorCoords(null, "local");
      e.scrollTo(null, (t.top + t.bottom) / 2 - e.getScrollInfo().clientHeight / 2);
    };
    function N(e) {
      var t = e.getCursor("from"), n = e.getCursor("to");
      if (h.cmpPos(t, n) == 0) {
        var r = K(e, t);
        if (!r.word)
          return;
        t = r.from, n = r.to;
      }
      return { from: t, to: n, query: e.getRange(t, n), word: r };
    }
    v(N, "getTarget");
    function O(e, t) {
      var n = N(e);
      if (n) {
        var r = n.query, l = e.getSearchCursor(r, t ? n.to : n.from);
        (t ? l.findNext() : l.findPrevious()) ? e.setSelection(l.from(), l.to()) : (l = e.getSearchCursor(r, t ? f(e.firstLine(), 0) : e.clipPos(f(e.lastLine()))), (t ? l.findNext() : l.findPrevious()) ? e.setSelection(l.from(), l.to()) : n.word && e.setSelection(n.from, n.to));
      }
    }
    v(O, "findAndGoTo"), a.findUnder = function(e) {
      O(e, !0);
    }, a.findUnderPrevious = function(e) {
      O(e, !1);
    }, a.findAllUnder = function(e) {
      var t = N(e);
      if (t) {
        for (var n = e.getSearchCursor(t.query), r = [], l = -1; n.findNext(); )
          r.push({ anchor: n.from(), head: n.to() }), n.from().line <= t.from.line && n.from().ch <= t.from.ch && l++;
        e.setSelections(r, l);
      }
    };
    var C = h.keyMap;
    C.macSublime = {
      "Cmd-Left": "goLineStartSmart",
      "Shift-Tab": "indentLess",
      "Shift-Ctrl-K": "deleteLine",
      "Alt-Q": "wrapLines",
      "Ctrl-Left": "goSubwordLeft",
      "Ctrl-Right": "goSubwordRight",
      "Ctrl-Alt-Up": "scrollLineUp",
      "Ctrl-Alt-Down": "scrollLineDown",
      "Cmd-L": "selectLine",
      "Shift-Cmd-L": "splitSelectionByLine",
      Esc: "singleSelectionTop",
      "Cmd-Enter": "insertLineAfter",
      "Shift-Cmd-Enter": "insertLineBefore",
      "Cmd-D": "selectNextOccurrence",
      "Shift-Cmd-Space": "selectScope",
      "Shift-Cmd-M": "selectBetweenBrackets",
      "Cmd-M": "goToBracket",
      "Cmd-Ctrl-Up": "swapLineUp",
      "Cmd-Ctrl-Down": "swapLineDown",
      "Cmd-/": "toggleCommentIndented",
      "Cmd-J": "joinLines",
      "Shift-Cmd-D": "duplicateLine",
      F5: "sortLines",
      "Shift-F5": "reverseSortLines",
      "Cmd-F5": "sortLinesInsensitive",
      "Shift-Cmd-F5": "reverseSortLinesInsensitive",
      F2: "nextBookmark",
      "Shift-F2": "prevBookmark",
      "Cmd-F2": "toggleBookmark",
      "Shift-Cmd-F2": "clearBookmarks",
      "Alt-F2": "selectBookmarks",
      Backspace: "smartBackspace",
      "Cmd-K Cmd-D": "skipAndSelectNextOccurrence",
      "Cmd-K Cmd-K": "delLineRight",
      "Cmd-K Cmd-U": "upcaseAtCursor",
      "Cmd-K Cmd-L": "downcaseAtCursor",
      "Cmd-K Cmd-Space": "setSublimeMark",
      "Cmd-K Cmd-A": "selectToSublimeMark",
      "Cmd-K Cmd-W": "deleteToSublimeMark",
      "Cmd-K Cmd-X": "swapWithSublimeMark",
      "Cmd-K Cmd-Y": "sublimeYank",
      "Cmd-K Cmd-C": "showInCenter",
      "Cmd-K Cmd-G": "clearBookmarks",
      "Cmd-K Cmd-Backspace": "delLineLeft",
      "Cmd-K Cmd-1": "foldAll",
      "Cmd-K Cmd-0": "unfoldAll",
      "Cmd-K Cmd-J": "unfoldAll",
      "Ctrl-Shift-Up": "addCursorToPrevLine",
      "Ctrl-Shift-Down": "addCursorToNextLine",
      "Cmd-F3": "findUnder",
      "Shift-Cmd-F3": "findUnderPrevious",
      "Alt-F3": "findAllUnder",
      "Shift-Cmd-[": "fold",
      "Shift-Cmd-]": "unfold",
      "Cmd-I": "findIncremental",
      "Shift-Cmd-I": "findIncrementalReverse",
      "Cmd-H": "replace",
      F3: "findNext",
      "Shift-F3": "findPrev",
      fallthrough: "macDefault"
    }, h.normalizeKeyMap(C.macSublime), C.pcSublime = {
      "Shift-Tab": "indentLess",
      "Shift-Ctrl-K": "deleteLine",
      "Alt-Q": "wrapLines",
      "Ctrl-T": "transposeChars",
      "Alt-Left": "goSubwordLeft",
      "Alt-Right": "goSubwordRight",
      "Ctrl-Up": "scrollLineUp",
      "Ctrl-Down": "scrollLineDown",
      "Ctrl-L": "selectLine",
      "Shift-Ctrl-L": "splitSelectionByLine",
      Esc: "singleSelectionTop",
      "Ctrl-Enter": "insertLineAfter",
      "Shift-Ctrl-Enter": "insertLineBefore",
      "Ctrl-D": "selectNextOccurrence",
      "Shift-Ctrl-Space": "selectScope",
      "Shift-Ctrl-M": "selectBetweenBrackets",
      "Ctrl-M": "goToBracket",
      "Shift-Ctrl-Up": "swapLineUp",
      "Shift-Ctrl-Down": "swapLineDown",
      "Ctrl-/": "toggleCommentIndented",
      "Ctrl-J": "joinLines",
      "Shift-Ctrl-D": "duplicateLine",
      F9: "sortLines",
      "Shift-F9": "reverseSortLines",
      "Ctrl-F9": "sortLinesInsensitive",
      "Shift-Ctrl-F9": "reverseSortLinesInsensitive",
      F2: "nextBookmark",
      "Shift-F2": "prevBookmark",
      "Ctrl-F2": "toggleBookmark",
      "Shift-Ctrl-F2": "clearBookmarks",
      "Alt-F2": "selectBookmarks",
      Backspace: "smartBackspace",
      "Ctrl-K Ctrl-D": "skipAndSelectNextOccurrence",
      "Ctrl-K Ctrl-K": "delLineRight",
      "Ctrl-K Ctrl-U": "upcaseAtCursor",
      "Ctrl-K Ctrl-L": "downcaseAtCursor",
      "Ctrl-K Ctrl-Space": "setSublimeMark",
      "Ctrl-K Ctrl-A": "selectToSublimeMark",
      "Ctrl-K Ctrl-W": "deleteToSublimeMark",
      "Ctrl-K Ctrl-X": "swapWithSublimeMark",
      "Ctrl-K Ctrl-Y": "sublimeYank",
      "Ctrl-K Ctrl-C": "showInCenter",
      "Ctrl-K Ctrl-G": "clearBookmarks",
      "Ctrl-K Ctrl-Backspace": "delLineLeft",
      "Ctrl-K Ctrl-1": "foldAll",
      "Ctrl-K Ctrl-0": "unfoldAll",
      "Ctrl-K Ctrl-J": "unfoldAll",
      "Ctrl-Alt-Up": "addCursorToPrevLine",
      "Ctrl-Alt-Down": "addCursorToNextLine",
      "Ctrl-F3": "findUnder",
      "Shift-Ctrl-F3": "findUnderPrevious",
      "Alt-F3": "findAllUnder",
      "Shift-Ctrl-[": "fold",
      "Shift-Ctrl-]": "unfold",
      "Ctrl-I": "findIncremental",
      "Shift-Ctrl-I": "findIncrementalReverse",
      "Ctrl-H": "replace",
      F3: "findNext",
      "Shift-F3": "findPrev",
      fallthrough: "pcDefault"
    }, h.normalizeKeyMap(C.pcSublime);
    var q = C.default == C.macDefault;
    C.sublime = q ? C.macSublime : C.pcSublime;
  });
})();
var E = Q.exports;
const X = /* @__PURE__ */ (0,_codemirror_es2_js__WEBPACK_IMPORTED_MODULE_0__.g)(E), te = /* @__PURE__ */ G({
  __proto__: null,
  default: X
}, [E]);

//# sourceMappingURL=sublime.es.js.map


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_graphiql_react_dist_sublime_es_js.js.map