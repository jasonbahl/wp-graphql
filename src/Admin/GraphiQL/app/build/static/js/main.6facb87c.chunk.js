(this["webpackJsonpwp-graphiql"]=this["webpackJsonpwp-graphiql"]||[]).push([[0],{153:function(e,n,t){e.exports=t(279)},277:function(e,n,t){},279:function(e,n,t){"use strict";t.r(n);var r=t(6),o=t.n(r),a=t(67),i=t.n(a),l=t(19),p=t(48),c=t(49),s=t(152),u=t(151),d=t(55),h=t.n(d),g=t(149),f=t.n(g),y=t(150),m=t(16),w=t(51),q=t(148),x=t(287),E=(t(275),function(e,n){var t=e.operationDataList[0].query.replace(/query\s.+{/gim,"{");return" ".repeat(n)+t.replace(/\n/g,"\n"+" ".repeat(n))}),O=[{name:"Page query",language:"Gatsby",codeMirrorMode:"jsx",options:[],generate:function(e){return'import React from "react"\nimport { graphql } from "gatsby"\n\nconst ComponentName = ({ data }) => <pre>{JSON.stringify(data, null, 4)}</pre>\n\nexport const query = graphql`\n'.concat(E(e,2),"\n`\n\nexport default ComponentName\n\n")}},{name:"StaticQuery hook",language:"Gatsby",codeMirrorMode:"jsx",options:[],generate:function(e){return'import React from "react"\nimport { useStaticQuery, graphql } from "gatsby"\n\nconst ComponentName = () => {\n  const data = useStaticQuery(graphql`\n'.concat(E(e,4),"\n  `)\n  return <pre>{JSON.stringify(data, null, 4)}</pre>\n}\n\nexport default ComponentName\n\n")}},{name:"StaticQuery",language:"Gatsby",codeMirrorMode:"jsx",options:[],generate:function(e){return'import React from "react"\nimport { StaticQuery, graphql } from "gatsby"\n\nconst ComponentName = () => (\n  <StaticQuery\n    query={graphql`\n'.concat(E(e,6),"\n    `}\n    render={data => <pre>{JSON.stringify(data, null, 4)}</pre>}\n  ></StaticQuery>\n)\n\nexport default ComponentName\n\n")}}],S=(t(276),t(277),t(278),{});window.location.search.substr(1).split("&").forEach((function(e){var n=e.indexOf("=");n>=0&&(S[decodeURIComponent(e.slice(0,n))]=decodeURIComponent(e.slice(n+1).replace(/\+/g,"%20")))}));var b={query:!0,variables:!0,operationName:!0,explorerIsOpen:!0},v={};for(var C in S)S.hasOwnProperty(C)&&!0!==b[C]&&(v[C]=S[C]);var Q=window.wpGraphiQLSettings&&window.wpGraphiQLSettings.nonce?window.wpGraphiQLSettings.nonce:null,I=window.wpGraphiQLSettings&&window.wpGraphiQLSettings.graphqlEndpoint?window.wpGraphiQLSettings.graphqlEndpoint:window.location.origin;function k(e){return fetch(I,{method:"post",headers:{Accept:"application/json","Content-Type":"application/json","X-WP-Nonce":Q},body:JSON.stringify(e),credentials:"include"}).then((function(e){return e.json()}))}function j(e){S.variables=e,L()}function _(e){S.operationName=e,L()}function L(){var e;history.replaceState(null,null,(e=S,"admin.php?"+Object.keys(e).map((function(n){return encodeURIComponent(n)+"="+encodeURIComponent(e[n])})).join("&")))}var T=S.query&&Object(m.a)(Object(w.a)(S.query))||window.localStorage&&window.localStorage.getItem("graphiql:query")||null;function G(e){return'# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser tool for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will see intelligent\n# typeaheads aware of the current GraphQL type schema and live syntax and\n# validation errors highlighted within the text.\n#\n# GraphQL queries typically start with a "{" character. Lines that starts\n# with a # are ignored.\n#\n# An example GraphQL query might look like:\n#\n'.concat(e,"\n#\n# Keyboard shortcuts:\n#\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\n#\n#     Merge Query:  Shift-Ctrl-M (or press the merge button above)\n#\n#       Run Query:  Ctrl-Enter (or press the play button above)\n#\n#   Auto Complete:  Ctrl-Space (or just start typing)\n#\n")}var N="undefined"!==typeof S.explorerIsOpen?"false"!==S.explorerIsOpen:!window.localStorage||"false"!==window.localStorage.getItem("graphiql:graphiqlExplorerOpen"),M="undefined"!==typeof S.codeExporterIsOpen?"false"!==S.codeExporterIsOpen:!!window.localStorage&&"true"===window.localStorage.getItem("graphiql:graphiqlCodeExporterOpen"),P=function(e){Object(s.a)(t,e);var n=Object(u.a)(t);function t(){var e;Object(p.a)(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return(e=n.call.apply(n,[this].concat(o))).state={schema:null,query:T,explorerIsOpen:N,codeExporterIsOpen:M},e._handleInspectOperation=function(n,t){var r=Object(w.a)(e.state.query||"");if(!r)return console.error("Couldn't parse query document"),null;var o=n.getTokenAt(t),a={line:t.line,ch:o.start},i={line:t.line,ch:o.end},l={start:n.indexFromPos(a),end:n.indexFromPos(i)},p=r.definitions.find((function(e){if(!e.loc)return console.log("Missing location information for definition"),!1;var n=e.loc,t=n.start,r=n.end;return t<=l.start&&r>=l.end}));if(!p)return console.error("Unable to find definition corresponding to mouse position"),null;var c="OperationDefinition"===p.kind?p.operation:"FragmentDefinition"===p.kind?"fragment":"unknown",s="OperationDefinition"===p.kind&&p.name||"FragmentDefinition"===p.kind&&p.name?p.name.value:"unknown",u=".graphiql-explorer-root #".concat(c,"-").concat(s),d=document.querySelector(u);return!!d&&(d.scrollIntoView(),!0)},e._handleEditQuery=function(n){S.query=n,L(),e.setState({query:n})},e._handleToggleExplorer=function(){var n=!e.state.explorerIsOpen;window.localStorage&&window.localStorage.setItem("graphiql:graphiqlExplorerOpen",n),S.explorerIsOpen=n,L(),e.setState({explorerIsOpen:n})},e._handleToggleExporter=function(){var n=!e.state.codeExporterIsOpen;window.localStorage&&window.localStorage.setItem("graphiql:graphiqlCodeExporterOpen",n),S.codeExporterIsOpen=n,L(),e.setState({codeExporterIsOpen:n})},e}return Object(c.a)(t,[{key:"componentDidMount",value:function(){var e=this;k({query:Object(q.a)()}).then((function(n){var t={schema:Object(x.a)(n.data)};if(null===e.state.query){try{var r=n.data.__schema.types.find((function(e){return"SiteSiteMetadata"===e.name&&"OBJECT"===e.kind}));if(r)r.fields.find((function(e){return"title"===e.name&&e.type&&"SCALAR"===e.type.kind&&"String"===e.type.name}))&&(t.query=G("#     {\n#       generalSettings {\n#         url\n#         title\n#       }\n#     }"))}catch(o){console.error(o)}t.query||(t.query=G("#     {\n#       posts {\n#         nodes {\n#           title\n#           uri\n#         }\n#       }\n#     }"))}e.setState(t)}));var n=this._graphiql.getQueryEditor();n.setOption("extraKeys",Object(l.a)(Object(l.a)({},n.options.extraKeys||{}),{},{"Shift-Alt-LeftClick":this._handleInspectOperation}))}},{key:"render",value:function(){var e=this,n=this.state,t=n.query,r=n.schema,a=n.codeExporterIsOpen?o.a.createElement(y.a,{hideCodeExporter:this._handleToggleExporter,snippets:O,query:t,codeMirrorTheme:"default"}):null;return o.a.createElement(o.a.Fragment,null,o.a.createElement(f.a,{schema:r,query:t,onEdit:this._handleEditQuery,explorerIsOpen:this.state.explorerIsOpen,onToggleExplorer:this._handleToggleExplorer,onRunOperation:function(n){return e._graphiql.handleRunQuery(n)}}),o.a.createElement(h.a,{ref:function(n){return e._graphiql=n},fetcher:k,schema:r,query:t,onEditQuery:this._handleEditQuery,onEditVariables:j,onEditOperationName:_},o.a.createElement(h.a.Toolbar,null,o.a.createElement(h.a.Button,{onClick:function(){return e._graphiql.handlePrettifyQuery()},label:"Prettify",title:"Prettify Query (Shift-Ctrl-P)"}),o.a.createElement(h.a.Button,{onClick:function(){return e._graphiql.handleToggleHistory()},label:"History",title:"Show History"}),o.a.createElement(h.a.Button,{onClick:this._handleToggleExplorer,label:"Explorer",title:"Toggle Explorer"}),o.a.createElement(h.a.Button,{onClick:this._handleToggleExporter,label:"Code Exporter",title:"Toggle Code Exporter"}))),a)}}]),t}(o.a.Component),R=document.getElementById("graphiql");i.a.render(o.a.createElement(P,null),R)}},[[153,1,2]]]);
//# sourceMappingURL=main.6facb87c.chunk.js.map