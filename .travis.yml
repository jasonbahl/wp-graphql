language: php

sudo: false

notifications:
  email:
    on_success: never
    on_failure: never

branches:
  only:
    - master
    - develop

matrix:
  include:
    - php: 5.5
      env: WP_VERSION=latest WP_MULTISITE=0 PHP_UNIT_VERSION=4.8
    - php: 5.6
      env: WP_VERSION=latest WP_MULTISITE=0 PHP_UNIT_VERSION=4.8
    - php: 7.0
      env: WP_VERSION=latest WP_MULTISITE=0 PHP_UNIT_VERSION=5.7
    - php: 7.1
      env: WP_VERSION=latest WP_MULTISITE=0 PHP_UNIT_VERSION=6.3
    - php: 5.5
      env: WP_VERSION=latest WP_MULTISITE=1 PHP_UNIT_VERSION=4.8
    - php: 5.6
      env: WP_VERSION=latest WP_MULTISITE=1 PHP_UNIT_VERSION=4.8
    - php: 7.0
      env: WP_VERSION=latest WP_MULTISITE=1 PHP_UNIT_VERSION=5.7
    - php: 7.1
      env: WP_VERSION=latest WP_MULTISITE=1 PHP_UNIT_VERSION=6.3
  fast_finish: true

services:
  - mysql

addons:
  apt:
    packages:
      - libjpeg-dev
      - libpng12-dev
      - php5-fpm
      - php5-mysql
      - nginx
  hosts:
    - wp.localhost

env:
  global:
    - WP_CORE_DIR="/tmp/wordpress"
    - WP_URL="http://wp.localhost"
    - WP_DOMAIN="wp.localhost"
    - DB_NAME="test"
    - TEST_DB_NAME="wploader"
    - WP_TABLE_PREFIX="wp_"
    - WP_ADMIN_USERNAME="admin"
    - WP_ADMIN_PASSWORD="admin"

before_install:
  # create the databases that will be used in the tests
#  - mysql -e "create database IF NOT EXISTS $DB_NAME;" -uroot
#  - mysql -e "create database IF NOT EXISTS $TEST_DB_NAME;" -uroot
  # set up folders
#  - mkdir -p $WP_FOLDER
  - mkdir tools
  # install wp-cli in the `tools` folder
  - wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P $(pwd)/tools/
  - chmod +x tools/wp-cli.phar && mv tools/wp-cli.phar tools/wp
  # append the `tools` folder to the PATH
  - export PATH=$PATH:$(pwd)/tools
  # prepend the `vendor/bin` folder the PATH
  - export PATH=vendor/bin:$PATH
  # Install GraphQL Schema Linter
  - npm install -g graphql-schema-linter


# Composer package installation
install:
  # Install composer packages, will also trigger dump-autoload
  - composer require phpunit/phpunit:$PHP_UNIT_VERSION
  - composer install --no-interaction
  # Install Unit Test Suite
  - bash bin/install-wp-tests.sh $TEST_DB_NAME root '' localhost $WP_VERSION true
  - mkdir -p build/logs
  # Install coveralls.phar
  - wget -c -nc --retry-connrefused --tries=0 https://github.com/satooshi/php-coveralls/releases/download/v1.0.1/coveralls.phar
  - chmod +x coveralls.phar
  - php coveralls.phar --version
  # Install GraphQL Schema Linter
  - npm install -g graphql-schema-linter
  # Install WordPress
  - cd $WP_CORE_DIR
  - wp core download --version=$WP_VERSION
  - wp config create --dbname="$DB_NAME" --dbuser="root" --dbpass="" --dbhost="127.0.0.1" --dbprefix="$WP_TABLE_PREFIX"
  - wp core install --url="$WP_URL" --title="Test" --admin_user="$WP_ADMIN_USERNAME" --admin_password="$WP_ADMIN_PASSWORD" --admin_email="admin@$WP_DOMAIN" --skip-email
  - wp rewrite structure '/%postname%/' --hard
  # update WordPress database to avoid prompts
  - wp core update-db
  # copy the plugin in the WordPress plugin folder
  - cp -r $TRAVIS_BUILD_DIR $WP_FOLDER/wp-content/plugins/wp-graphql
  # show the plugins folder contents to make sure the plugin folder is there
  - ls $WP_FOLDER/wp-content/plugins
  # activate the plugin
  - wp plugin activate wp-graphql
  # make sure the plugin is active on the site
  - wp plugin list --status=active
  # Flush the rewrites
  - wp rewrite flush
  # get back to the build folder
  - cd $TRAVIS_BUILD_DIR
  # open up the site folder to allow the PHP application to read/write/execute on it
  - sudo chmod -R 777 $WP_FOLDER
  # copy the Nginx configuration file to the available sites
  - sudo cp bin/conf/travis-nginx-conf /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_CORE_DIR%?WP_CORE_DIR?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_DOMAIN%?$WP_DOMAIN?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN
  # enable the site
  - sudo ln -s /etc/nginx/sites-available/$WP_DOMAIN /etc/nginx/sites-enabled/

script:
  # Make sure the GraphQL endpoint is working
  - curl http://wp.localhost/graphql
  - vendor/bin/phpunit --group ajax
  - vendor/bin/phpunit --coverage-clover build/logs/clover.xml

before_script:
  # restart Nnginx and PHP-FPM services
  - sudo service php5-fpm restart
  - sudo service nginx restart

after_success:
  - travis_retry php coveralls.phar -v
  # Move to the WordPress directory
  - cd $WP_CORE_DIR
  # Generate the static GraphQL Schema
  - wp graphql generate-static-schema
  # Move to the plugin directory
  - cd $WP_CORE_DIR/wp-content/plugins/wp-graphql
  # Run the linter against the static schema
  - graphql-schema-linter schema.graphql
  # get back to the build folder
  - cd $TRAVIS_BUILD_DIR

cache:
  directories:
  - vendor
  - $HOME/.composer/cache
