sudo: required

services:
  - docker

language: php

notifications:
  email:
    on_success: never
    on_failure: never

branches:
  only:
    - master
    - develop

cache:
  apt: true

# Set the global environment variables
env:
  matrix:
    # These apply to the latest WP version that is available as a Docker image: https://hub.docker.com/_/wordpress/

    # Disabling PHP 5.6 tests until "composer.lock" is updated to work with PHP 7.X AND 5.6.
    # - WP_VERSION=5.0.2 PHP_VERSION=5.6
    - WP_VERSION=5.2.3 PHP_VERSION=7.1
    - WP_VERSION=5.2.3 PHP_VERSION=7.2
    - WP_VERSION=5.2.3 PHP_VERSION=7.3 COVERAGE=true LINT_SCHEMA=true
    - PHPCS=true
    - SCHEMA_DOCS=true

matrix:
  allow_failures:
    - env: PHPCS=true

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - |
    # Remove Xdebug for a huge performance increase:
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi

before_script:
  # Install PHP CodeSniffer and WPCS.
  - |
    if [[ "$PHPCS" == "true" ]]; then
      composer install

      phpenv rehash
    fi

script:
  - |
    if [[ "$SCHEMA_DOCS" == "true" ]]; then
      npm install netlify-cli -g
      npm install -g @2fd/graphdoc
      bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 $WP_VERSION false
      graphdoc -s ./schema.graphql -o ./doc/schema
      netlify deploy --dir ./doc/schema --auth "$NETLIFY_ACCESS_TOKEN" --site "$NETLIFY_SITE_ID" --prod
    else
      ./run-docker-tests.sh 'wpunit'
      ./run-docker-tests.sh 'functional'
      ./run-docker-tests.sh 'acceptance'
    fi
  - if [[ "$PHPCS" == "true" ]]; then composer check-cs; fi

after_success:
  # Upload coverage to codecov
  - |
    if [[ "${COVERAGE}" == 'true' ]]; then
      bash <(curl -s https://codecov.io/bash)
    fi
  # Install GraphQL Schema Linter
  # Move to the WordPress Install
  # Generate the Static Schema
  # Lint the Schema
  - |
    if [ [ $LINT_SCHEMA == true ] ]; then
      npm install -g graphql-schema-linter
      cd $WP_CORE_DIR
      cd $WP_CORE_DIR/wp-content/plugins/wp-graphql
      graphql-schema-linter ./schema.graphql
    fi

#before_deploy:
#  - npm install netlify-cli -g
#  - npm install -g @2fd/graphdoc
#  - graphdoc -s ./schema.graphql -o ./doc/schema
#  - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
#deploy:
#  script: netlify deploy --dir ./doc/schema --auth $NETLIFY_ACCESS_TOKEN --site=$NETLIFY_SITE_ID
#  skip_cleanup: false
#  on:
#    branch: all

